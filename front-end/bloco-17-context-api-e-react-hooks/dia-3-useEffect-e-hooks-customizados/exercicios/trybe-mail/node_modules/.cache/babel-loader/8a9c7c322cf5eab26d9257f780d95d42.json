{"ast":null,"code":"var _jsxFileName = \"/home/themonio92/Documentos/trybe-exercicios/front-end/bloco-17-context-api-e-react-hooks/dia-3-useEffect-e-hooks-customizados/exercicios/trybe-mail/src/components/Mails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mails(_ref) {\n  _s();\n\n  let {\n    emails,\n    setEmails\n  } = _ref;\n\n  const readEmail = id => {\n    const updatedMessage = emails.map(email => {\n      if (email.id === id) {\n        return { ...email,\n          status: 1\n        };\n      } else {\n        return { ...email\n        };\n      }\n    });\n    setEmails(updatedMessage);\n  };\n\n  const unreadEmail = id => {\n    const updatedMessage = emails.map(email => {\n      if (email.id === id) {\n        return { ...email,\n          status: 0\n        };\n      } else {\n        return { ...email\n        };\n      }\n    });\n    setEmails(updatedMessage);\n  };\n\n  useEffect(() => {\n    const isRead = emails.every(_ref2 => {\n      let {\n        status\n      } = _ref2;\n      return status === 1;\n    });\n    if (isRead) alert(\"Parabens, você leu todas as mensagens\");\n  }, [emails]);\n\n  const markAllAsRead = () => {\n    const allAsRead = emails.map(email => ({ ...email,\n      status: 1\n    }));\n    setEmails(allAsRead);\n  };\n\n  const markAllAsUnread = () => {\n    const allAsRead = emails.map(email => ({ ...email,\n      status: 0\n    }));\n    setEmails(allAsRead);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: markAllAsRead,\n      children: \"Marcar todas como lidas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: markAllAsUnread,\n      children: \"Marcar todas como n\\xE3o lidas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: emails.map(email => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: email.status === 0 ? 'unread' : 'read',\n            children: [email.title, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => readEmail(email.id),\n              children: \"Lido\"\n            }, `read${email.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => unreadEmail(email.id),\n              children: \"N\\xE3o lido\"\n            }, `unread${email.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, email.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mails, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Mails;\nMails.propTypes = {\n  emails: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    status: PropTypes.number\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Mails\");","map":{"version":3,"names":["React","useEffect","PropTypes","Mails","emails","setEmails","readEmail","id","updatedMessage","map","email","status","unreadEmail","isRead","every","alert","markAllAsRead","allAsRead","markAllAsUnread","title","propTypes","arrayOf","shape","number","string","isRequired"],"sources":["/home/themonio92/Documentos/trybe-exercicios/front-end/bloco-17-context-api-e-react-hooks/dia-3-useEffect-e-hooks-customizados/exercicios/trybe-mail/src/components/Mails.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Mails({ emails, setEmails }) {\n  const readEmail = (id) => {\n    const updatedMessage = emails.map((email) => {\n      if(email.id === id) {\n        return { ...email, status: 1 }\n      } else {\n        return {...email};\n      }\n    })\n    setEmails(updatedMessage)\n  };\n\n  const unreadEmail = (id) => {\n    const updatedMessage = emails.map((email) => {\n      if(email.id === id) {\n        return { ...email, status: 0 }\n      } else {\n        return {...email};\n      }\n    })\n    setEmails(updatedMessage)\n  };\n\n  useEffect(() => {\n    const isRead = emails.every(({status}) => status === 1);\n    if(isRead) alert(\"Parabens, você leu todas as mensagens\");\n  }, [emails]);\n\n  const markAllAsRead = () => {\n    const allAsRead = emails.map(email => ({ ...email, status: 1}));\n    setEmails(allAsRead);\n  };\n  const markAllAsUnread = () => {\n    const allAsRead = emails.map(email => ({ ...email, status: 0}));\n    setEmails(allAsRead);\n  };\n\n  return (\n    <div>\n      <button onClick={markAllAsRead} >Marcar todas como lidas</button>\n      <button onClick={markAllAsUnread} >Marcar todas como não lidas</button>\n      <div>\n        <ul>\n          {emails.map((email) => {\n            return(\n              <li\n                key={email.id}\n                className={email.status === 0 ? 'unread' : 'read'}\n              >\n                {email.title}\n                <button key={`read${email.id}`} onClick={() => readEmail(email.id)}>Lido</button>\n                <button key={`unread${email.id}`} onClick={() => unreadEmail(email.id)}>Não lido</button>\n              </li>\n            )\n          } )}\n\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nMails.propTypes = {\n  emails: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      status: PropTypes.number,\n    }),\n  ).isRequired,\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}