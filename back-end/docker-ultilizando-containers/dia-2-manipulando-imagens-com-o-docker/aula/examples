FROM (importa imagem ou cria nova camada) (node for react v16.14 trybe)
WORKDIR (imagem padrão ou comando daqui pra baixo são executados dentro dessa pasta)
COPY (preferred) or ADD (for extraction zip) #ESQUERDA LOCAL, DIREITA CONTAINER
ENV variaveis de ambiente.
RUN (executa ações durante a criação da imagem ex. install) && ENTRYPOINT(obrigatóriamente vai ser executado ex. npm start) os dois se complementam
CMD (Sujestão default, pode ser alterado)

https://dockerlabs.collabnix.com/docker/cheatsheet/

# COLOCAR IMAGEM BASE
FROM node:16.14 AS build

# DEFINIR PASTA PADRÃO
WORKDIR /app

# COPIAR ARQUIVOS PARA INSTALAÇÃO
COPY package.json . (./DIRETÓRIO)
COPY package-lock.json . # GARANTIR CONSISTENCIA DE PACOTES

#FAZER INSTALAÇÃO
RUN npm install

# COPIAR CODIGO
COPY . .
# Criar .dockerignore para node_modules e build

# GERAR BUILD
CMD[ "npm", "start" ] ou ["npm", "run", "build" ] com mais estagios CMD npm run build

##### novo estagio de build

# COLOCAR IMAGEM BASE
FROM nginx:stable-alpine

# COPIAR ARQUIVOS DA BUILD
COPY --from=build /app/build /usr/share/nginx/html
# SUBSTITUINDO ARQUIVOS
COPY nginx/nginx.conf /etc/nginx/conf.d/default.conf

# DEFINIR PORTA PRA RODAR
EXPOSE 80

# DEFINIR COMANDO PADRÂO
CMD ["nginx", "-g", "daemon-off;"]

docker build -t <imagem>: <versão>
docker run --name xablau -p 3000:80 <imagem>:<versão>
